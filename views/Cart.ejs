<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
    <link rel="stylesheet" href="../styles/Cart.css">
</head>
<body>
    <div class="cart-container">
        <!-- Left Section - Cart Items -->
        <div class="cart-section">
            <div class="cart-header">
                <h1 class="cart-title">Cart</h1>
                <div class="cart-actions">
                    <button class="cart-action-btn" id="selectAllBtn">Select All</button>
                    <span>|</span>
                    <button class="cart-action-btn" id="deleteSelectedBtn">Delete</button>
                </div>
            </div>

            <div class="selection-info">
                <span id="selectionCount">0/0 items selected</span>
            </div>

            <div class="cart-items" id="cartItems">
                <!-- Cart items will be dynamically inserted here -->
            </div>
        </div>

        <!-- Right Section - Order Summary -->
        <div class="summary-section">
            <h2 class="summary-title">Order Summary</h2>

            <div class="summary-row">
                <span class="summary-label">SubTotal</span>
                <span class="summary-value" id="subtotalValue">₹0</span>
            </div>

            <div class="summary-row">
                <span class="summary-label">Delivery</span>
                <span class="summary-value" id="deliveryValue">₹0</span>
            </div>

            <div class="divider"></div>

            <div class="total-row">
                <span>Total</span>
                <span id="totalValue">₹0</span>
            </div>

            <button class="buy-btn" id="buyBtn" disabled>Proceed</button>
        </div>
    </div>

    <script>
        // Cart data structure
        let cart = JSON.parse(localStorage.getItem('cart')) || [];

        // Product database (from your JSON file)
        const productDatabase = {
            "iPhone 17 Pro Max": {
                "description": "The ultimate flagship iPhone",
                "ProductThumbnail": "/picsss/Products/Product Thumbnail Images/iPhone 17 front and back.png",
                "price": "₹1,74,900",
                "priceNum": 174900
            },
            "iPhone 16 Pro Max": {
                "description": "The top model from the previous year",
                "price": "₹1,34,900",
                "priceNum": 134900
            },
            "iPhone 16 Pro": {
                "description": "Designed for professionals",
                "price": "₹1,29,900",
                "priceNum": 129900
            },
            "iPhone 17": {
                "description": "The standard iPhone 17",
                "price": "₹89,900",
                "priceNum": 89900
            },
            "iPhone16": {
                "description": "Balance of performance and affordability",
                "price": "₹69,900",
                "priceNum": 69900
            },
            "iPhone16Plus": {
                "description": "Larger display with powerful performance",
                "price": "₹79,900",
                "priceNum": 79900
            },
            "MacBook Air": {
                "description": "Ideal for portability and power",
                "price": "₹99,900",
                "priceNum": 99900
            },
            "MacBook Pro": {
                "description": "Ultimate choice for professionals",
                "price": "₹1,69,900",
                "priceNum": 169900
            },
            "AirPods Pro 2": {
                "description": "Premium wireless earbuds",
                "price": "₹24,900",
                "priceNum": 24900
            }
        };

        // Initialize cart display
        function initCart() {
            renderCart();
            updateSummary();
            updateSelectionInfo();
        }

        // Render cart items
        function renderCart() {
            const cartItemsContainer = document.getElementById('cartItems');
            
            if (cart.length === 0) {
                cartItemsContainer.innerHTML = `
                    <div class="empty-cart">
                        <i class="ri-shopping-cart-line"></i>
                        <p>Your cart is empty</p>
                        <small>Add some products to get started!</small>
                    </div>
                `;
                return;
            }

            cartItemsContainer.innerHTML = cart.map((item, index) => `
                <div class="cart-item" data-index="${index}">
                    <input type="checkbox" class="item-checkbox" ${item.selected ? 'checked' : ''} onchange="toggleSelection(${index})">
                    <div class="item-image">
                        <img src="${item.image || '/placeholder.png'}" alt="${item.name}" onerror="this.src='/placeholder.png'">
                    </div>
                    <div class="item-details">
                        <div class="item-name">${item.name}</div>
                        <div class="item-price">${item.price}</div>
                    </div>
                    <div class="item-controls">
                        <div class="quantity-control">
                            <button class="qty-btn" onclick="decreaseQuantity(${index})">
                                <i class="ri-subtract-line"></i>
                            </button>
                            <span class="qty-value">${item.quantity}</span>
                            <button class="qty-btn" onclick="increaseQuantity(${index})">
                                <i class="ri-add-line"></i>
                            </button>
                        </div>
                        <button class="delete-btn" onclick="removeItem(${index})">
                            <i class="ri-delete-bin-line"></i>
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Toggle item selection
        function toggleSelection(index) {
            cart[index].selected = !cart[index].selected;
            saveCart();
            updateSummary();
            updateSelectionInfo();
        }

        // Select all items
        document.getElementById('selectAllBtn').addEventListener('click', function() {
            const allSelected = cart.every(item => item.selected);
            cart.forEach(item => item.selected = !allSelected);
            saveCart();
            renderCart();
            updateSummary();
            updateSelectionInfo();
        });

        // Delete selected items
        document.getElementById('deleteSelectedBtn').addEventListener('click', function() {
            cart = cart.filter(item => !item.selected);
            saveCart();
            renderCart();
            updateSummary();
            updateSelectionInfo();
        });

        // Increase quantity
        function increaseQuantity(index) {
            cart[index].quantity++;
            saveCart();
            renderCart();
            updateSummary();
        }

        // Decrease quantity
        function decreaseQuantity(index) {
            if (cart[index].quantity > 1) {
                cart[index].quantity--;
                saveCart();
                renderCart();
                updateSummary();
            }
        }

        // Remove item
        function removeItem(index) {
            cart.splice(index, 1);
            saveCart();
            renderCart();
            updateSummary();
            updateSelectionInfo();
        }

        // Update selection info
        function updateSelectionInfo() {
            const selectedCount = cart.filter(item => item.selected).length;
            document.getElementById('selectionCount').textContent = `${selectedCount}/${cart.length} items selected`;
        }

        // Update order summary
        function updateSummary() {
            const selectedItems = cart.filter(item => item.selected);
            const subtotal = selectedItems.reduce((sum, item) => sum + (item.priceNum * item.quantity), 0);
            const delivery = selectedItems.length > 0 ? 1500 : 0;
            const total = subtotal + delivery;

            document.getElementById('subtotalValue').textContent = `₹${subtotal.toLocaleString('en-IN')}`;
            document.getElementById('deliveryValue').textContent = `₹${delivery.toLocaleString('en-IN')}`;
            document.getElementById('totalValue').textContent = `₹${total.toLocaleString('en-IN')}`;

            // Enable/disable buy button
            document.getElementById('buyBtn').disabled = selectedItems.length === 0;
        }

        // Save cart to localStorage
        function saveCart() {
            localStorage.setItem('cart', JSON.stringify(cart));
            updateCartBadge();
        }

        // Update cart badge
        function updateCartBadge() {
            const badges = document.querySelectorAll('.cart-badge');
            const count = cart.reduce((sum, item) => sum + item.quantity, 0);
            badges.forEach(badge => {
                badge.textContent = count;
                badge.style.display = count > 0 ? 'flex' : 'none';
            });
        }

        // Add to cart function (to be called from product page)
        function addToCart(productKey, productData) {
            const existingItem = cart.find(item => item.key === productKey);
            
            if (existingItem) {
                existingItem.quantity++;
            } else {
                cart.push({
                    key: productKey,
                    name: productKey,
                    price: productData.price,
                    priceNum: productData.priceNum,
                    image: productData.ProductThumbnail || productData.image || '/placeholder.png',
                    quantity: 1,
                    selected: false
                });
            }
            
            saveCart();
            renderCart();
            updateSummary();
            updateSelectionInfo();
            
            // Show notification
            alert(`${productKey} added to cart!`);
        }

        // Buy button handler
        document.getElementById('buyBtn').addEventListener('click', function() {
            const selectedItems = cart.filter(item => item.selected);
            if (selectedItems.length > 0) {
                // Store selected items for checkout
                localStorage.setItem('checkoutItems', JSON.stringify(selectedItems));
                // Redirect to checkout page
                window.location.href = '/DeliveryAddress';
            }
        });

        // Initialize on page load
        initCart();

        // Expose addToCart function globally for product page
        window.addToCart = addToCart;
        window.productDatabase = productDatabase;
    </script>
</body>
</html>