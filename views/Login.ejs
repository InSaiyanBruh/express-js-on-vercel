<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="google-signin-client_id"
        content="289829610487-ntn4hdteq3om8aio1mh4ip00k7t7t51p.apps.googleusercontent.com">
    <title>iPhone Login</title>
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
    <!-- font link -->
    <link href="https://fonts.cdnfonts.com/css/minimo" rel="stylesheet">
    <link rel="stylesheet" href="../style.css">
    <link rel="stylesheet" href="/output.css">
    <script src="https://accounts.google.com/gsi/client" async defer></script>
    <style>
        /* Full screen overlay */
        #loader-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background-color: white;
            /* You can also use rgba(255,255,255,0.8) */
            z-index: 9999;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .loader {
            display: inline-grid;
            padding: 5px;
            background: #fff;
            filter: blur(4px) contrast(12);
        }

        .loader:before {
            content: "";
            height: 40px;
            aspect-ratio: 3;
            --c: #0000 64%, #000 66% 98%, #0000 101%;
            background:
                radial-gradient(35% 146% at 50% 159%, var(--c)) 0 0,
                radial-gradient(35% 146% at 50% -59%, var(--c)) 100% 100%;
            background-size: calc(200%/3) 50%;
            background-repeat: repeat-x;
            -webkit-mask: repeating-linear-gradient(90deg, #000 0 10%, #0000 0 20%);
            animation: l12 .8s infinite linear;
        }

        @keyframes l12 {
            to {
                background-position: -200% 0, -100% 100%
            }
        }
    </style>
</head>

<body>
    <!-- Loader Overlay -->
    <div id="loader-overlay">
        <div class="loader"></div>
    </div>

    <div class="bg-white flex w-full h-screen">
        <div class="LeftImg w-1/2 h-screen overflow-hidden">
            <img src="../picsss/pascal-brandle-_c68iz7nRk0-unsplash.jpg" alt="" class="w-full h-screen object-cover">
        </div>
        <div class="Right w-1/2 flex flex-col justify-center items-center">
            <div class="Login relative text-center mb-5">
                <p class="text-xl font-medium">Login to</p>
                <h1 class="text-5xl font-bold">iPhone</h1>
            </div>
            <div class="flex justify-center">
                <button  data-onsuccess="onSignIn"
                    class="GoogleLogin bg-gray-950 flex gap-2 relative justify-center cursor-pointer p-2 w-80 rounded-[5px] hover:bg-gray-500 text-white hover:text-black">
                    <img class="w-[25px]" src="../picsss/Google_Favicon_2025.svg" alt="">

                    <h1 class="font-bold">Login with Google</h1>
                </button>
                <!-- Hidden container for official Google button; used only to trigger the flow -->
                <div id="gsiHidden" style="display:none;"></div>
            </div>
            <div class="OR flex gap-2 relative justify-center items-center mt-6">
                <div class="LeftLine bg-black h-[2px] w-[12rem]"></div>
                <p class="text-xl">or</p>
                <div class="LeftLine bg-black h-[2px] w-[12rem]"></div>
            </div>
            <form action="/" method="POST">
                <div class="ManualLogIn flex flex-col gap-3 mt-5">
                    <input class="bg-gray-300 text-black p-2 w-80 shadow-black shadow-[0px_2px_2px_0px] rounded-[5px]"
                        type="email" id="email" name="email" placeholder="E-mail" required>
                    <input class="bg-gray-300 text-black p-2 w-80 shadow-black shadow-[0px_2px_2px_0px] rounded-[5px]"
                        type="password" id="password" name="password" placeholder="Password" required>
                </div>
                <button type="submit"
                    class="bg-white shadow-black shadow-[0px_5px_5px_0px] border-gray-400 border-1 text-black font-bold text-xl relative justify-center mt-6 p-1.5 w-80 rounded-[5px] cursor-pointer hover:shadow-[0px_0px_0px_0px] hover:bg-black hover:text-white">Log
                    in</button>
            </form>
            <p class="font-bold cursor-pointer text-l mt-5 hover:underline">Forgot password?</p>
            <div class="flex gap-1 mt-1">
                <p class="font-medium text-l">Don't have an account?</p>
                <a class="font-bold text-l cursor-pointer underline" href="http://localhost:3000/Signup">Sign up</a>
            </div>
        </div>
    </div>

    <script>
        window.addEventListener('load', function () {
            const loaderOverlay = document.getElementById('loader-overlay');
            loaderOverlay.style.transition = 'opacity 0.5s ease';
            loaderOverlay.style.opacity = '0';
            setTimeout(() => loaderOverlay.style.display = 'none', 500);
        });

        let gsiInitialized = false;
        function initGSI() {
            if (!window.google || !google.accounts || !google.accounts.id) return;
            if (gsiInitialized) return;
            const clientId = document.querySelector('meta[name="google-signin-client_id"]').getAttribute('content');
            google.accounts.id.initialize({
                client_id: clientId,
                callback: async (response) => {
                    try {
                        const id_token = response.credential; // JWT ID token
                        const res = await fetch('/auth/google', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ id_token })
                        });
                        const data = await res.json().catch(() => ({}));
                        if (res.ok && data && data.ok) {
                            window.location.href = '/';
                        } else {
                            alert(data && data.message ? data.message : 'Google sign-in failed');
                        }
                    } catch (e) {
                        console.error('Google sign-in error', e);
                        alert('Google sign-in was cancelled or failed');
                    }
                },
                cancel_on_tap_outside: true,
                ux_mode: 'popup'
            });
            gsiInitialized = true;

            // Render an official Google button in a hidden container
            const hidden = document.getElementById('gsiHidden');
            let hiddenBtnEl = null;
            if (hidden) {
                google.accounts.id.renderButton(hidden, {
                    type: 'standard',
                    theme: 'filled_black',
                    size: 'large',
                    shape: 'pill',
                    text: 'signin_with'
                });
                // Grab the real clickable element Google renders
                hiddenBtnEl = hidden.querySelector('div[role="button"], div[aria-label]');
            }

            // Bind your existing styled button to trigger the hidden Google button
            const btn = document.querySelector('.GoogleLogin');
            if (btn && hiddenBtnEl) {
                btn.addEventListener('click', function (e) {
                    e.preventDefault();
                    hiddenBtnEl.click();
                });
            }
        }

        // Wait for the GSI script to load if needed
        window.addEventListener('load', () => {
            if (window.google && google.accounts && google.accounts.id) return initGSI();
            let tries = 0;
            const iv = setInterval(() => {
                tries++;
                if (window.google && google.accounts && google.accounts.id) {
                    clearInterval(iv);
                    initGSI();
                }
                if (tries > 40) clearInterval(iv); // ~4s timeout
            }, 100);
        });
    </script>

</body>

</html>